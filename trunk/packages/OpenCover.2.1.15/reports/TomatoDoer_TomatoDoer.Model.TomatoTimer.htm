<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>TomatoDoer.Model.TomatoTimer - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />

</head><body><div class="container"><h1>Summary</h1><table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>TomatoDoer.Model.TomatoTimer</td></tr><tr><th>Assembly:</th><td>TomatoDoer</td></tr><tr><th>File(s):</th><td><a href="#FcodingTomatoDoerTomatoDoerModelTomatoTimercs">F:\coding\TomatoDoer\TomatoDoer\Model\TomatoTimer.cs</a></td></tr><tr><th>Coverage:</th><td>92.5%</td></tr><tr><th>Covered lines:</th><td>62</td></tr><tr><th>Coverable lines:</th><td>67</td></tr><tr><th>Total lines:</th><td>166</td></tr></table>
<h1>Metrics</h1><table class="overview">
<tr>
<th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td>.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr><tr><td>.ctor(...)</td><td>1</td><td>0</td><td>0</td></tr><tr><td>GetInitializedTimer()</td><td>1</td><td>0</td><td>0</td></tr><tr><td>InitializeNewTomatoTimeSpan(...)</td><td>1</td><td>100</td><td>100</td></tr><tr><td>OnStarting()</td><td>2</td><td>100</td><td>100</td></tr><tr><td>OnTomatoDoneOrSquashed()</td><td>5</td><td>100</td><td>87</td></tr><tr><td>Reset()</td><td>2</td><td>100</td><td>100</td></tr><tr><td>Squash()</td><td>2</td><td>100</td><td>100</td></tr><tr><td>StartTimer()</td><td>1</td><td>100</td><td>100</td></tr><tr><td>StartTimer(...)</td><td>2</td><td>100</td><td>100</td></tr><tr><td>StopTimer()</td><td>2</td><td>100</td><td>100</td></tr><tr><td>TimerTick()</td><td>3</td><td>100</td><td>100</td></tr><tr><td>TomatoLog_Updated()</td><td>5</td><td>92</td><td>62</td></tr></table>
<h1>File(s)</h1><h2 id="FcodingTomatoDoerTomatoDoerModelTomatoTimercs">F:\coding\TomatoDoer\TomatoDoer\Model\TomatoTimer.cs</h2><table>
<tr>
<th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code>using&nbsp;System.Collections.Generic;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code>using&nbsp;System.Linq;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code>using&nbsp;System.Text.RegularExpressions;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code>namespace&nbsp;TomatoDoer.Model</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>{</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>9</code></td><td class="light"><code>&nbsp;&nbsp;///&nbsp;Represents&nbsp;tomato&nbsp;timer&nbsp;which&nbsp;counts&nbsp;tomatoes.</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>10</code></td><td class="light"><code>&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>&nbsp;&nbsp;public&nbsp;class&nbsp;TomatoTimer&nbsp;:&nbsp;ITomatoTimer</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>13</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;List&lt;TomatoTimeSpan&gt;&nbsp;_TomatoHistory&nbsp;=&nbsp;new&nbsp;List&lt;TomatoTimeSpan&gt;();</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>14</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;ITimer&nbsp;_Timer;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>15</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;TomatoTimeSpan&nbsp;_TomatoTimeSpan;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>16</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;TomatoTimer&nbsp;_Instance&nbsp;=&nbsp;null;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>17</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>18</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;event&nbsp;Action&nbsp;TomatoDoneOrSquashed;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>19</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;event&nbsp;Action&nbsp;Starting;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>20</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;event&nbsp;Action&nbsp;Tick;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;event&nbsp;Action&nbsp;TomatoHistoryWasRewritten;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>22</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">83</td><td class="right"><code>23</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITomatoLog&nbsp;TomatoLog&nbsp;{&nbsp;get;&nbsp;set;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>24</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>25</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;TomatoTimer(ITimer&nbsp;timer,&nbsp;ITomatoLog&nbsp;tomatoLog)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>27</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TomatoLog&nbsp;=&nbsp;tomatoLog;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>28</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TomatoDuration&nbsp;=&nbsp;TomatoTimeSpan.MediumTomatoSpan;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>29</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_Timer&nbsp;=&nbsp;timer;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>30</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_Timer.Tick&nbsp;+=&nbsp;new&nbsp;Action(TimerTick);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>31</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TomatoLog.Updated&nbsp;+=&nbsp;new&nbsp;Action(TomatoLog_Updated);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>32</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>33</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>34</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;TomatoLog_Updated()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>35</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>36</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Regex&nbsp;regex&nbsp;=&nbsp;new&nbsp;Regex(@&quot;Tomato&nbsp;(\d+)&nbsp;was&nbsp;done&quot;);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>37</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;matches&nbsp;=&nbsp;regex.Matches(TomatoLog.Text);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>38</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(matches.Count&nbsp;&gt;&nbsp;0&nbsp;)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>39</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>40</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;lastMatch&nbsp;=&nbsp;matches[matches.Count&nbsp;-&nbsp;1];</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>41</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;tomatoNumber&nbsp;=&nbsp;int.Parse(lastMatch.Groups[1].Value);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>42</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(CountTomatoesDone&nbsp;!=&nbsp;tomatoNumber)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>43</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>44</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoHistory.Clear();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>45</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;=&nbsp;tomatoNumber;&nbsp;i++)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>46</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">3</td><td class="right"><code>47</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoHistory.Add(new&nbsp;TomatoTimeSpan()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>48</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{Duration&nbsp;=&nbsp;new&nbsp;TimeSpan(0),&nbsp;EndTime&nbsp;=&nbsp;DateTime.Now,&nbsp;StartTime&nbsp;=&nbsp;DateTime.Now});</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>49</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>50</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(TomatoHistoryWasRewritten&nbsp;!=&nbsp;null)&nbsp;TomatoHistoryWasRewritten();</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>51</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>52</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>53</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>54</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>55</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;TomatoTimer(ITimer&nbsp;timer)&nbsp;:&nbsp;this(timer,&nbsp;null)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>56</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>57</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>58</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>59</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">94</td><td class="right"><code>60</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;TimeSpan&nbsp;TomatoDuration&nbsp;{&nbsp;get;&nbsp;set;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>61</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>62</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;TomatoTimer&nbsp;Instance</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>63</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>64</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;_Instance&nbsp;??&nbsp;(GetInitializedTimer());&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>65</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>66</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>67</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;TomatoTimer&nbsp;GetInitializedTimer()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>68</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>69</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_Instance&nbsp;=&nbsp;new&nbsp;TomatoTimer(new&nbsp;WinTimer(),&nbsp;Model.TomatoLog.Instance);</code></td></tr>
<tr>
<td class="red">&nbsp;</td><td class="leftmargin right">0</td><td class="right"><code>70</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_Instance;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>71</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>72</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>73</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;CountTomatoesDone</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>74</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">40</td><td class="right"><code>75</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;_TomatoHistory.Count(tomato&nbsp;=&gt;&nbsp;tomato.State&nbsp;==&nbsp;ETomatoState.Ended);&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>77</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>78</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;IsStarted</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>79</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">30</td><td class="right"><code>80</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;_TomatoTimeSpan.State&nbsp;==&nbsp;ETomatoState.Started;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>81</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>82</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>83</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;TimeSpan&nbsp;TomatoTimeRemains</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>84</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>85</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;_TomatoTimeSpan.TimeRemains;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>86</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>87</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>88</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ETomatoState&nbsp;State</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>89</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">3</td><td class="right"><code>90</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;&nbsp;_TomatoTimeSpan.State;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>91</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>92</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>93</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;TimerTick()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>94</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">23</td><td class="right"><code>95</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_TomatoTimeSpan.State&nbsp;!=&nbsp;ETomatoState.Started)&nbsp;StopTimer();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>96</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(Tick&nbsp;!=&nbsp;null)&nbsp;Tick();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">3</td><td class="right"><code>97</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>98</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">35</td><td class="right"><code>99</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;StartTimer()&nbsp;{&nbsp;&nbsp;StartTimer(TomatoDuration);&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>100</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>101</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;StartTimer(TimeSpan&nbsp;tomatoDuration)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>102</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">28</td><td class="right"><code>103</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(IsStarted)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>104</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;TomatoException(&quot;Can&#39;t&nbsp;start&nbsp;new&nbsp;tomato.&nbsp;There&nbsp;is&nbsp;a&nbsp;started&nbsp;tomato&nbsp;already.&quot;);</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>105</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>106</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitializeNewTomatoTimeSpan(tomatoDuration);</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>107</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>108</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TomatoDuration&nbsp;=&nbsp;tomatoDuration;</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>109</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>110</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_Timer.Start();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>111</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OnStarting();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>112</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>113</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>114</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;InitializeNewTomatoTimeSpan(TimeSpan&nbsp;tomatoDuration)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>115</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>116</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoTimeSpan.Duration&nbsp;=&nbsp;tomatoDuration;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>117</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoTimeSpan.StartTime&nbsp;=&nbsp;DateTime.Now;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>118</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoTimeSpan.EndTime&nbsp;=&nbsp;null;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>119</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>120</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>121</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Squash()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>122</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>123</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(_TomatoTimeSpan.State&nbsp;!=&nbsp;ETomatoState.Started)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>124</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;TomatoException(&quot;Can&#39;t&nbsp;squash&nbsp;tomato.&nbsp;It&nbsp;isn&#39;t&nbsp;started.&quot;);</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>125</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>126</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StopTimer();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">8</td><td class="right"><code>127</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>128</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>129</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Reset()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>130</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>131</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(_Timer.IsStarted)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>132</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StopTimer();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>133</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoHistory.Clear();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">4</td><td class="right"><code>134</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>135</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>136</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;StopTimer()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>137</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>138</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoTimeSpan.EndTime&nbsp;=&nbsp;DateTime.Now;</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>139</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_TomatoHistory.Add(_TomatoTimeSpan);</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>140</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OnTomatoDoneOrSquashed();</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>141</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">36</td><td class="right"><code>142</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_Timer.IsStarted)&nbsp;_Timer.Stop();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>143</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>144</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>145</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;OnTomatoDoneOrSquashed()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>146</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>147</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(TomatoLog&nbsp;!=&nbsp;null)</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>148</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>149</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_TomatoTimeSpan.State&nbsp;==&nbsp;ETomatoState.Squashed)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>150</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TomatoLog.Write(&quot;Tomato&nbsp;was&nbsp;squashed.&quot;);</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>151</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>152</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(_TomatoTimeSpan.State&nbsp;==&nbsp;ETomatoState.Ended)</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">10</td><td class="right"><code>153</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TomatoLog.Write(string.Format(&quot;Tomato&nbsp;{0}&nbsp;was&nbsp;done&nbsp;({1:00}:{2:00}).&quot;,&nbsp;CountTomatoesDone,&nbsp;TomatoDuration.Minute</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>154</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>155</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>156</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">22</td><td class="right"><code>157</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(TomatoDoneOrSquashed&nbsp;!=&nbsp;null)&nbsp;TomatoDoneOrSquashed();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">19</td><td class="right"><code>158</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>159</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>160</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;OnStarting()</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>161</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">28</td><td class="right"><code>162</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Starting&nbsp;!=&nbsp;null)&nbsp;Starting();</code></td></tr>
<tr>
<td class="green">&nbsp;</td><td class="leftmargin right">27</td><td class="right"><code>163</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>164</code></td><td class="light"><code></code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>165</code></td><td class="light"><code>&nbsp;&nbsp;}</code></td></tr>
<tr>
<td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>166</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.2.4.0<br />18.01.2012 - 20:23:29<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>